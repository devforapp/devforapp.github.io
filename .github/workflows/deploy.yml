# TianDev Studio 官网自动部署工作流
# 当代码推送到 main 分支时自动部署到 GitHub Pages

name: 🚀 Deploy TianDev Studio Website

on:
  # 当推送到 main 分支时触发
  push:
    branches: [ main, master ]
  # 当创建 Pull Request 时触发（仅构建，不部署）
  pull_request:
    branches: [ main, master ]
  # 允许手动触发工作流
  workflow_dispatch:

# 设置必要的权限
permissions:
  contents: read
  pages: write
  id-token: write

# 确保同时只有一个部署在运行
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # 构建作业
  build:
    name: 🔨 Build Website
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整的 git 历史
        
      - name: 🔧 配置 GitHub Pages
        uses: actions/configure-pages@v4
        
      - name: 📦 安装 Node.js（用于可选的构建工具）
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
        continue-on-error: true
        
      - name: 🛠️ 构建网站
        run: |
          echo "🌟 开始构建 TianDev Studio 官网..."
          
          # 检查文件完整性
          echo "📋 检查关键文件..."
          ls -la index.html _config.yml favicon.svg
          
          # 验证 HTML 语法（可选）
          if command -v htmlhint &> /dev/null; then
            echo "🔍 验证 HTML 语法..."
            htmlhint index.html
          fi
          
          # 检查 SVG 图标
          echo "🎨 检查 SVG 图标..."
          find assets/icons -name "*.svg" -type f | wc -l
          
          # 验证 JavaScript 语法（可选）
          if command -v jshint &> /dev/null; then
            echo "🔍 验证 JavaScript 语法..."
            jshint assets/js/*.js || true
          fi
          
          echo "✅ 静态网站构建完成，准备部署！"
          
      - name: 📤 上传构建产物
        uses: actions/upload-pages-artifact@v3
        with:
          path: .
          
      - name: 📊 生成构建报告
        run: |
          echo "📈 构建统计信息："
          echo "- HTML 文件: $(find . -name "*.html" -type f | wc -l)"
          echo "- CSS 文件: $(find . -name "*.css" -type f | wc -l)"
          echo "- JS 文件: $(find . -name "*.js" -type f | wc -l)"
          echo "- SVG 图标: $(find . -name "*.svg" -type f | wc -l)"
          echo "- 总文件大小: $(du -sh . | cut -f1)"

  # 部署作业
  deploy:
    name: 🚀 Deploy to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    # 只在推送到 main 分支时部署（不在 PR 时部署）
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
      - name: 🌐 部署到 GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: 🎉 部署成功通知
        run: |
          echo "🎊 TianDev Studio 官网部署成功！"
          echo "🔗 网站地址: ${{ steps.deployment.outputs.page_url }}"
          echo "📅 部署时间: $(date)"
          echo "🔄 提交哈希: ${{ github.sha }}"